'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _not = require('ramda/src/not');

var _not2 = _interopRequireDefault(_not);

var _head = require('ramda/src/head');

var _head2 = _interopRequireDefault(_head);

var _isNil = require('ramda/src/isNil');

var _isNil2 = _interopRequireDefault(_isNil);

var _curry = require('ramda/src/curry');

var _curry2 = _interopRequireDefault(_curry);

var _compose = require('ramda/src/compose');

var _compose2 = _interopRequireDefault(_compose);

var _endsWith = require('ramda/src/endsWith');

var _endsWith2 = _interopRequireDefault(_endsWith);

var _startsWith = require('ramda/src/startsWith');

var _startsWith2 = _interopRequireDefault(_startsWith);

var _index = require('./index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultPagesPaths = ['/src/pages/'];

var getPagesPaths = function getPagesPaths(options) {
  return options && options.pagesPaths || defaultPagesPaths;
};

var getLangKeyDefault = function getLangKeyDefault(options) {
  return options && options.langKeyDefault || options;
};

var addSlashStart = function addSlashStart(fileName) {
  return (0, _startsWith2.default)('/', fileName) ? fileName : '/' + fileName;
};

var addSlashEnd = function addSlashEnd(fileName) {
  return (0, _endsWith2.default)('/', fileName) ? fileName : fileName + '/';
};

var addSlash = (0, _compose2.default)(addSlashStart, addSlashEnd);

/**
 * Get slug (path) and langKey for a given file path.
 *
 * Used by gatsby-plugin-i18n and gatsby-plugin-i18n-tags
 *
 * @param {{langKeyDefault: string, pagesPaths: string[], prefixDefault: boolean }} options plugin options
 * @param {String} fileAbsolutePath local file absolute path
 * @return {{slug: string, langKey: string, redirectTo: string}} slug and langKey
 */
var getSlugAndLang = (0, _curry2.default)(function (options, fileAbsolutePath) {
  var slugsAndLangs = getPagesPaths(options).map(function (pagesPath) {
    var filePath = ('safeStartToSplit-' + fileAbsolutePath).split(pagesPath)[1];

    if ((0, _isNil2.default)(filePath)) {
      return null;
    }

    var langKeyDefault = getLangKeyDefault(options);
    var fileName = filePath.split('.');
    var langKey = fileName.length === 3 ? fileName[1] : langKeyDefault;
    var title = addSlash(fileName[0].replace('index', ''));
    var slug = fileName.length === 3 ? (0, _index.addLangKeyToSlug)(title, langKey, options) : title;

    return {
      slug: slug,
      langKey: langKey,
      redirectTo: slug === '/' ? addSlash(langKeyDefault) : null
    };
  });

  return (0, _head2.default)(slugsAndLangs.filter((0, _compose2.default)(_not2.default, _isNil2.default)));
});

exports.default = getSlugAndLang;