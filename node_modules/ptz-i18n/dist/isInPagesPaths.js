'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isEmpty = require('ramda/src/isEmpty');

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _not = require('ramda/src/not');

var _not2 = _interopRequireDefault(_not);

var _compose = require('ramda/src/compose');

var _compose2 = _interopRequireDefault(_compose);

var _contains = require('ramda/src/contains');

var _contains2 = _interopRequireDefault(_contains);

var _filter = require('ramda/src/filter');

var _filter2 = _interopRequireDefault(_filter);

var _getPagesPaths = require('./getPagesPaths');

var _getPagesPaths2 = _interopRequireDefault(_getPagesPaths);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Checks if a path is in options.pagesPaths
 * @sig Options -> String -> Boolean
 * @param {{pagesPaths: string[]}} options plugin options
 * @param {String} path path to check
 * @return {Result<Boolean>} is in
 */
var isInPagesPaths = function isInPagesPaths(options, path) {
  return (0, _getPagesPaths2.default)(options).map((0, _filter2.default)(function (pagePath) {
    return (0, _contains2.default)(pagePath, path);
  })).map((0, _compose2.default)(_not2.default, _isEmpty2.default));
};

exports.default = isInPagesPaths;